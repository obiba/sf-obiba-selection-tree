angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="row">\n  <button ng-click="$ctrl.toggleNode()" class="btn btn-sm btn-link" type="button">\n    <i class="glyphicon" ng-show="!$ctrl.isLeaf" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n    <div ng-show="$ctrl.isLeaf" style="width: 1em;"></div>\n  </button>\n\n  <input ng-show="!$ctrl.readonly" type="checkbox" name="{{$ctrl.currentNodePath}}" ng-model="$ctrl.selections[$ctrl.currentNodePath]" ng-change="$ctrl.toggleNodeSelection()">\n\n  <span style="margin-left: 1em;">\n    <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>\n    {{$ctrl.currentNodeTitle}}\n  </span>\n\n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" class="row" style="margin-left: 2em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes"\n      node="node"\n      selections="$ctrl.selections"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <sf-obiba-selection-tree-node\n    ng-repeat="node in form.schema.nodes"\n    node="node"\n    selections="selections"\n    on-toggle-children-selections="onSelectionUpdate(selections)"\n    readonly="form.readonly">\n  </sf-obiba-selection-tree-node>\n\n  <span class="help-block" sf-message="form.helpvalue"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates","ngObiba"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,n,o,t){function l(n,o,l){if("array"===o.type&&"obibaSelectionTree"===o.format){var r=e.stdFormObj(n,o,l);return r.key=l.path,r.type="obibaSelectionTree",r.multiple="multiple",l.lookup[t.stringify(l.path)]=r,r}}e.defaults.array.unshift(l),n.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",o.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",parentNode:"<",onToggleChildrenSelections:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:function(){function e(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(l.currentNode=e.node.currentValue,l.currentNodePath=l.node.path,l.currentNodeTitle=l.node.title||l.node.path,l.isLeaf=l.node&&"d"!==l.node.type&&(!Array.isArray(l.node.nodes)||0===l.node.nodes.length))}function n(){l.isOpen=!l.isOpen}function o(e){l.onToggleChildrenSelections({selections:e})}function t(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.forEach(function(e){l.selections[e.path]=l.selections[l.currentNodePath]});else{if(l.isLeaf||l.currentNode.nodes.forEach(function(e){l.selections[e.path]=l.selections[l.currentNodePath],t(e)}),l.parentNode&&Array.isArray(l.parentNode.nodes)){var n=l.parentNode.nodes.filter(function(e){return l.selections[e.path]}).length;l.selections[l.parentNode.path]=n===l.parentNode.nodes.length}l.toggleChildrenSelections(l.selections)}}const l=this;l.$onChanges=e,l.toggleNode=n,l.toggleChildrenSelections=o,l.toggleNodeSelection=t}}).controller("sfObibaSelectionTreeController",["$scope",function(e){function n(){var n=Object.keys(e.selections);if(n&&n.length>0){var o=e.model[e.form.key]||[];o.length=0;var t=n.filter(function(n){return e.selections[n]});e.ngModel.$setViewValue(t),t.forEach(function(e){o.push(e)}),e.model[e.form.key]=o}}e.selections={},e.onSelectionUpdate=n}]);