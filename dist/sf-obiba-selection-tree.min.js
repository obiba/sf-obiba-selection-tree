angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="col-xs-12">\n  <button ng-click="$ctrl.toggleNode()" class="btn btn-sm btn-link" type="button">\n    <i class="glyphicon" ng-show="!$ctrl.isLeaf" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n    <div ng-show="$ctrl.isLeaf" style="width: 1em;"></div>\n  </button>\n\n  <input ng-show="!$ctrl.readonly" type="checkbox" name="{{$ctrl.currentNodePath}}" ng-model="$ctrl.selections[$ctrl.currentNodePath]" ng-change="$ctrl.toggleNodeSelection()">\n\n  <span style="margin-left: 1em;">\n    <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>\n    <span ng-show="!$ctrl.hasAttributes">{{$ctrl.currentNodeTitle}}</span>\n    <button ng-show="$ctrl.hasAttributes" ng-click="$ctrl.toggleAttributes($ctrl.currentNode)" class="btn btn-link" type="button">{{$ctrl.currentNodeTitle}}</button>\n  </span>\n\n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" class="row" style="margin-left: 1.25em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes | treeFilter:$ctrl.textFilter"\n      node="node"\n      selections="$ctrl.selections"\n      text-filter="$ctrl.textFilter"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      on-toggle-attributes="$ctrl.toggleAttributes(node)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div class="row" ng-hide="form.schema.noFilter">\n    <div class="col-xs-4">\n      <div class="input-group">\n        <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>\n        <input type="text" class="form-control" ng-model="text">\n      </div>\n    </div>        \n  </div>\n\n  <div class="row">\n    <div ng-class="{\'col-xs-12\': !nodeAttributeShown, \'col-xs-5\': nodeAttributeShown}">\n      <sf-obiba-selection-tree-node\n        ng-repeat="node in form.schema.nodes | treeFilter:text"\n        node="node"\n        selections="selections"\n        text-filter="text"\n        on-toggle-children-selections="onSelectionUpdate(selections)"\n        on-toggle-attributes="toggleNodeAttributes(node)"\n        readonly="form.readonly">\n      </sf-obiba-selection-tree-node>\n    </div>\n\n    <div ng-show="nodeAttributeShown" style="box-shadow: 0 5px 15px rgba(0,0,0,0.5);" class="col-xs-7">\n      <p ng-bind-html="renderedAttribute"></p>\n    </div>    \n  </div>\n  <span class="help-block" sf-message="form.helpvalue"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates","ngObiba"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,t,n,o){function r(t,n,r){if("array"===n.type&&"obibaSelectionTree"===n.format){var l=e.stdFormObj(t,n,r);return l.key=r.path,l.type="obibaSelectionTree",l.multiple="multiple",r.lookup[o.stringify(r.path)]=l,l}}e.defaults.array.unshift(r),t.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",n.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",parentNode:"<",textFilter:"<",onToggleChildrenSelections:"&",onToggleAttributes:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:function(){function e(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(l.currentNode=e.node.currentValue,l.currentNodePath=l.node.path,l.currentNodeTitle=l.node.title||l.node.path,l.isLeaf=l.node&&"d"!==l.node.type&&(!Array.isArray(l.node.nodes)||0===l.node.nodes.length),l.hasAttributes=l.node&&Array.isArray(l.node.attributes)&&l.node.attributes.length>0)}function t(){l.isOpen=!l.isOpen}function n(e){l.onToggleChildrenSelections({selections:e})}function o(e){l.onToggleAttributes({node:e})}function r(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.forEach(function(e){l.selections[e.path]=l.selections[l.currentNodePath]});else{if(l.isLeaf||l.currentNode.nodes.forEach(function(e){l.selections[e.path]=l.selections[l.currentNodePath],r(e)}),l.parentNode&&Array.isArray(l.parentNode.nodes)){var t=l.parentNode.nodes.filter(function(e){return l.selections[e.path]}).length;l.selections[l.parentNode.path]=t===l.parentNode.nodes.length}l.toggleChildrenSelections(l.selections)}}const l=this;l.$onChanges=e,l.toggleNode=t,l.toggleChildrenSelections=n,l.toggleAttributes=o,l.toggleNodeSelection=r}}).controller("sfObibaSelectionTreeController",["$scope","marked",function(e,t){function n(t){var n=e.form.key.reduce(function(t,n){return t=t?t:e.model,t[n]});n=t}function o(){var t=Object.keys(e.selections);if(t&&t.length>0){n([]);var o=t.filter(function(t){return e.selections[t]});e.ngModel.$setViewValue(o),n(o)}}function r(t){e.nodeAttributeShown&&e.nodeAttributeShown===t.path?(e.nodeAttributeShown=void 0,e.renderedAttribute=""):(e.nodeAttributeShown=t.path,l(t.attributes))}function l(n){var o="";n.forEach(function(e){o.trim().length>0&&(o+="\n\n"),o=o+(e.title&&e.title.trim().length>0?e.title+"\n\n":"")+(e.body&&e.body.trim().length>0?e.body:"")}),e.renderedAttribute=t(o)}e.nodeAttributeShown=void 0,e.renderedAttribute="",e.selections={},e.onSelectionUpdate=o,e.toggleNodeAttributes=r}]).filter("treeFilter",function(){function e(t,n){var o=((t.path||"")+(t.title||"")).toLowerCase(),r=o.indexOf(n)>-1,l=Array.isArray(t.nodes)&&t.nodes.filter(function(t){return e(t,n)}).length>0;return r||l}return function(t,n){var o=(n||"").trim().toLowerCase();return 0===o.length?t:(t||[]).filter(function(t){return e(t,o)})}});