angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="col-xs-12">\n  <button ng-click="$ctrl.toggleNode()" class="btn btn-sm btn-link" type="button">\n    <i class="glyphicon" ng-show="!$ctrl.isLeaf" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n    <div ng-show="$ctrl.isLeaf" style="width: 1em;"></div>\n  </button>\n\n  <input ng-show="!$ctrl.readonly" type="checkbox" name="{{$ctrl.currentNodePath}}" ng-model="$ctrl.selections[$ctrl.currentNodePath]" ng-change="$ctrl.toggleNodeSelection()">\n\n  <span style="margin-left: 1em;">\n    <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>\n    {{$ctrl.currentNodeTitle}}\n  </span>\n\n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" class="row" style="margin-left: 1.25em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes | treeFilter:$ctrl.textFilter"\n      node="node"\n      selections="$ctrl.selections"\n      text-filter="$ctrl.textFilter"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div class="row" ng-hide="form.schema.noFilter">\n    <div class="col-xs-4">\n      <div class="input-group">\n        <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>\n        <input type="text" class="form-control" ng-model="text">\n      </div>\n    </div>        \n  </div>\n\n  <div class="row">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in form.schema.nodes | treeFilter:text"\n      node="node"\n      selections="selections"\n      text-filter="text"\n      on-toggle-children-selections="onSelectionUpdate(selections)"\n      readonly="form.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n\n  <span class="help-block" sf-message="form.helpvalue"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates","ngObiba"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,n,t,o){function r(n,t,r){if("array"===t.type&&"obibaSelectionTree"===t.format){var l=e.stdFormObj(n,t,r);return l.key=r.path,l.type="obibaSelectionTree",l.multiple="multiple",r.lookup[o.stringify(r.path)]=l,l}}e.defaults.array.unshift(r),n.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",t.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",parentNode:"<",textFilter:"<",onToggleChildrenSelections:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:function(){function e(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(r.currentNode=e.node.currentValue,r.currentNodePath=r.node.path,r.currentNodeTitle=r.node.title||r.node.path,r.isLeaf=r.node&&"d"!==r.node.type&&(!Array.isArray(r.node.nodes)||0===r.node.nodes.length))}function n(){r.isOpen=!r.isOpen}function t(e){r.onToggleChildrenSelections({selections:e})}function o(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.forEach(function(e){r.selections[e.path]=r.selections[r.currentNodePath]});else{if(r.isLeaf||r.currentNode.nodes.forEach(function(e){r.selections[e.path]=r.selections[r.currentNodePath],o(e)}),r.parentNode&&Array.isArray(r.parentNode.nodes)){var n=r.parentNode.nodes.filter(function(e){return r.selections[e.path]}).length;r.selections[r.parentNode.path]=n===r.parentNode.nodes.length}r.toggleChildrenSelections(r.selections)}}const r=this;r.$onChanges=e,r.toggleNode=n,r.toggleChildrenSelections=t,r.toggleNodeSelection=o}}).controller("sfObibaSelectionTreeController",["$scope",function(e){function n(){var n=Object.keys(e.selections);if(n&&n.length>0){var t=e.model[e.form.key]||[];t.length=0;var o=n.filter(function(n){return e.selections[n]});e.ngModel.$setViewValue(o),o.forEach(function(e){t.push(e)}),e.model[e.form.key]=t}}e.selections={},e.onSelectionUpdate=n}]).filter("treeFilter",function(){function e(n,t){var o=((n.path||"")+(n.title||"")).toLowerCase(),r=o.indexOf(t)>-1,l=Array.isArray(n.nodes)&&n.nodes.filter(function(n){return e(n,t)}).length>0;return r||l}return function(n,t){var o=(t||"").trim().toLowerCase();return 0===o.length?n:(n||[]).filter(function(n){return e(n,o)})}});