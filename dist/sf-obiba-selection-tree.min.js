angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="st-node">\n  <button ng-click="$ctrl.toggleNode()" class="btn btn-sm btn-link" type="button">\n    <i class="glyphicon" ng-show="!$ctrl.isLeaf" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n    <div ng-show="$ctrl.isLeaf" style="width: 1em;"></div>\n  </button>\n\n  <input type="checkbox" name="{{$ctrl.currentNodePath}}" indeterminate \n    ng-disabled="$ctrl.readonly || (!$ctrl.isLeaf && $ctrl.single)" \n    ng-model="$ctrl.selections[$ctrl.currentNodePath]" \n    ng-change="$ctrl.toggleNodeSelection()"\n    style="margin-right: 1em;">\n\n  <span>\n    <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>\n    <span ng-show="!$ctrl.hasDescription">{{$ctrl.currentNodeTitle}}</span>\n    <button ng-show="$ctrl.hasDescription" ng-click="$ctrl.toggleDescription($ctrl.currentNode)" class="btn btn-link" type="button">{{$ctrl.currentNodeTitle}}</button>\n  </span>\n\n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" style="margin-left: 1.25em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes | treeFilter:$ctrl.textFilter"\n      node="node"\n      selections="$ctrl.selections"\n      text-filter="$ctrl.textFilter"\n      single="$ctrl.single"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      on-toggle-description="$ctrl.toggleDescription(node)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group st-form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div ng-if="isSingle" class="st-head">\n    <span ng-class="ngModel.$modelValue ? \'st-selection\' : \'st-no-selection\' ">{{ ngModel.$modelValue || form.schema.noSelectionLabel || \'No selection\' }}</span>\n    <button ng-if="!form.readonly" ng-click="toggleShowTree()" class="st-selector btn btn-sm btn-default" type="button">{{ form.schema.selectLabel || \'Select...\' }}</button>\n  </div>\n\n  <div ng-show="!isSingle || showTree" ng-class="\'st-card-\' + form.schema.type">\n\n    <div class="st-card-section">\n      <div ng-if="isSingle" ng-click="toggleShowTree()" class="st-card-header">\n        <span>{{ ngModel.$modelValue || form.schema.noSelectionLabel || \'No selection\' }}</span>\n        <i class="glyphicon glyphicon-remove st-close"></i>\n      </div>\n      <div ng-if="isSingle && form.schema.selectionTipLabel" class="st-card-help">\n        <p class="help-block">{{ form.schema.selectionTipLabel }}</p>\n      </div>\n      <div class="row">\n        <div ng-class="{\'col-12 col-xs-12\': !nodeDescriptionShown, \'col-5 col-xs-5\': nodeDescriptionShown}" class="st-card-body">\n          <div class="input-group" ng-hide="form.schema.noFilter" style="max-width: 200px" class="st-filter">\n            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>\n            <input type="text" class="form-control" ng-model="text">\n          </div>\n          <sf-obiba-selection-tree-node\n            ng-repeat="node in form.schema.nodes | treeFilter:text"\n            node="node"\n            selections="selections"\n            text-filter="text"\n            single="isSingle"\n            on-toggle-children-selections="onSelectionUpdate(selections)"\n            on-toggle-description="toggleNodeDescription(node)"\n            readonly="form.readonly"\n            class="st-tree">\n          </sf-obiba-selection-tree-node>\n        </div>\n    \n        <div ng-show="nodeDescriptionShown" class="col-7 col-xs-7">\n          <div class="st-description">\n            <div class="st-description-head help-block">\n              <span>{{ nodeDescriptionShown }}</span>\n            </div>\n            <div ng-bind-html="renderedDescription" class="st-description-body"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <span class="help-block" sf-message="form.helpvalue || form.description"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,n,t,o){function i(n,t,i){if(("array"===t.type||"string"===t.type)&&"obibaSelectionTree"===t.format){var r=e.stdFormObj(n,t,i);return r.key=i.path,r.type="obibaSelectionTree","array"===t.type&&(r.multiple="multiple"),i.lookup[o.stringify(i.path)]=r,r}}e.defaults.array.unshift(i),e.defaults.string.unshift(i),n.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",t.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",single:"<",parentNode:"<",textFilter:"<",onToggleChildrenSelections:"&",onToggleDescription:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:function(){function e(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(r.currentNode=e.node.currentValue,r.currentNodePath=r.node.path,r.currentNodeTitle=r.node.title||r.node.path,r.isLeaf=r.node&&"d"!==r.node.type&&(!Array.isArray(r.node.nodes)||0===r.node.nodes.length),r.hasDescription=r.node&&r.node.description)}function n(){r.isOpen=!r.isOpen}function t(e){if(!r.isLeaf&&Array.isArray(r.currentNode.nodes)){var n=r.currentNode.nodes.filter(function(n){return e[n.path]}).length;e[r.currentNode.path]=n===r.currentNode.nodes.length}r.onToggleChildrenSelections({selections:e})}function o(e){r.onToggleDescription({node:e})}function i(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.forEach(function(e){r.selections[e.path]=r.selections[r.currentNodePath]});else if(r.isLeaf||r.currentNode.nodes.forEach(function(e){r.selections[e.path]=r.selections[r.currentNodePath],i(e)}),r.single){const n=Object.keys(r.selections);n.forEach(function(e){e!==r.currentNodePath&&delete r.selections[e]}),r.onToggleChildrenSelections({selections:r.selections})}else r.toggleChildrenSelections(r.selections)}const r=this;r.$onChanges=e,r.toggleNode=n,r.toggleChildrenSelections=t,r.toggleDescription=o,r.toggleNodeSelection=i}}).controller("sfObibaSelectionTreeController",["$scope","marked",function(e,n){function t(){var n=e.ngModel.$modelValue;Array.isArray(n)?n.map(function(n){e.selections[n]=!0}):"string"==typeof n&&(e.selections[n]=!0)}function o(){var n=Object.keys(e.selections);if(n&&n.length>0){var t,o=n.filter(function(n){return e.selections[n]});t="string"===e.form.schema.type?0===o.length?void 0:o.pop():o,e.ngModel.$setViewValue(t)}}function i(n){e.nodeDescriptionShown&&e.nodeDescriptionShown===n.path?(e.nodeDescriptionShown=void 0,e.renderedDescription=""):(e.nodeDescriptionShown=n.path,r(n.description))}function r(t){var o="",i=function(e){o.trim().length>0&&(o+="\n"),o+=e&&e.trim().length>0?e+"\n":""};Array.isArray(t)?t.forEach(i):i(t),e.renderedDescription=n(o)}function s(){e.showTree=!e.showTree}e.nodeDescriptionShown=void 0,e.renderedDescription="",e.selections={},e.onSelectionUpdate=o,e.toggleNodeDescription=i,e.showTree=!1,e.toggleShowTree=s,e.initialized=!1,e.$watch("form",function(){e.isSingle="string"===e.form.schema.type,e.showTree=!e.isSingle}),e.$watch("ngModel.$modelValue",function(){t()})}]).filter("treeFilter",function(){function e(n,t){var o=((n.path||"")+(n.title||"")).toLowerCase(),i=o.indexOf(t)>-1,r=Array.isArray(n.nodes)&&n.nodes.filter(function(n){return e(n,t)}).length>0;return i||r}return function(n,t){var o=(t||"").trim().toLowerCase();return 0===o.length?n:(n||[]).filter(function(n){return e(n,o)})}}).directive("indeterminate",[function(){return{require:"?ngModel",link:function(e,n,t,o){var i=function(n){if(!n.nodes)return!1;var t=e.$ctrl.selections,o=n.nodes.filter(function(e){return t[e.path]}).length,r=n.nodes.length;if(0===o&&r>0){var s=n.nodes.map(function(e){return i(e)}).filter(function(e){return e}).pop();return s===!0}return o>0&&o<r};o.$formatters=[],o.$parsers=[],o.$render=function(){var t=o.$viewValue;n.data("checked",t),t?(n.prop("indeterminate",!1),n.prop("checked",!0)):(n.prop("indeterminate",i(e.$ctrl.currentNode)),n.prop("checked",!1))},n.bind("click",function(){var t=!n.data("checked");o.$setViewValue(t),e.$apply(o.$render)})}}}]);