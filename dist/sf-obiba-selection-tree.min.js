angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="st-node">\n  <div class="st-side-container">\n    <div class="st-side-by-side">\n      <a ng-show="!$ctrl.isLeaf" ng-click="$ctrl.toggleNode()" class="btn btn-sm">\n        <i class="glyphicon" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n      </a>\n      <span ng-show="$ctrl.isLeaf" style="margin-left: 34px;"></span>\n    </div>\n    <div class="st-side-by-side">\n      <input type="checkbox" name="{{$ctrl.currentNodePath}}" indeterminate \n        ng-disabled="$ctrl.readonly || (!$ctrl.isLeaf && $ctrl.single)" \n        ng-model="$ctrl.selections[$ctrl.currentNodePath]" \n        ng-change="$ctrl.toggleNodeSelection()"\n        style="margin-right: 1em;">\n    </div>\n    <div class="st-side-by-side">\n      <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>  \n    </div>\n    <div class="st-side-by-side" ng-class="{\'active\': $ctrl.isNodeDescribed($ctrl.currentNode)}">\n      <span ng-if="!$ctrl.hasDescription">{{$ctrl.currentNodeTitle}}</span>\n      <a href="javascript:void(0)" ng-show="$ctrl.hasDescription" ng-click="$ctrl.toggleDescription($ctrl.currentNode)">{{$ctrl.currentNodeTitle}}</a>\n    </div>  \n  </div>\n  \n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" style="margin-left: 1.25em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes | treeFilter:$ctrl.textFilter"\n      node="node"\n      selections="$ctrl.selections"\n      text-filter="$ctrl.textFilter"\n      single="$ctrl.single"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      on-toggle-description="$ctrl.toggleDescription(node)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group st-form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div ng-if="isPopup" class="st-head">\n    <span ng-if="isSingle" ng-class="ngModel.$modelValue ? \'st-selection\' : \'st-no-selection\' ">{{ toLabel(ngModel.$modelValue) || noSelectionLabel }}</span>\n    <span ng-if="!isSingle && (!ngModel.$modelValue || ngModel.$modelValue.length === 0)" class="st-selection">{{ noSelectionLabel }}</span>\n    <ul ng-if="!isSingle && ngModel.$modelValue && ngModel.$modelValue.length > 0">\n      <li ng-repeat="item in ngModel.$modelValue">{{ toLabel(item) }}</li>\n    </ul>\n    <button ng-if="!form.readonly" ng-click="toggleShowTree()" class="st-selector btn btn-sm btn-default" type="button">{{ form.selectLabel || \'Select...\' }}</button>\n    <a ng-if="form.readonly && ngModel.$modelValue" ng-click="toggleShowTree()" class="st-selector st-show">{{ form.showDetailsLabel || \'Show details...\' }}</a>\n  </div>\n\n  <div ng-show="!isPopup || showTree" ng-class="\'st-card-\' + (isPopup ? \'popup\' : \'inline\')">\n\n    <div class="st-card-section">\n      <div ng-if="isPopup" class="st-card-header">\n        <div>\n          <span ng-if="isSingle">{{ ngModel.$modelValue || noSelectionLabel }}</span>\n          <span ng-if="!isSingle">{{ ngModel.$modelValue ? selectionsCountLabel() : noSelectionLabel }}</span>\n          <span ng-if="form.readonly">\n            <span ng-if="form.closeLabel" ng-click="toggleShowTree()" class="btn btn-primary st-close">{{ form.closeLabel }}</span>\n            <i ng-if="!form.closeLabel" ng-click="toggleShowTree()" class="glyphicon glyphicon-remove st-close" ></i>\n          </span>\n          <span ng-if="!form.readonly">\n            <span ng-click="saveAndClose()" class="btn btn-primary st-save">{{ form.saveLabel || \'Save\' }}</span>\n            <span ng-click="cancelAndClose()" class="btn btn-default st-cancel">{{ form.cancelLabel || \'Cancel\' }}</span>\n          </span>\n        </div>\n        <div ng-if="!form.notitle" class="st-card-title">\n          <label>{{ form.title }}</label>\n        </div>\n        <div ng-if="!form.readonly && form.selectionTipLabel" class="st-card-help">\n          <p class="help-block">{{ form.selectionTipLabel }}</p>\n        </div>\n      </div>\n      <div class="st-card-content">\n        <div class="row">\n          <div ng-class="nodesPanelClass()" class="st-card-body">\n            <div class="input-group" ng-hide="noFilter" style="max-width: 200px;" class="st-filter">\n              <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>\n              <input type="text" class="form-control" ng-model="text">\n            </div>\n            <div ng-hide="form.noExpandCollapse" style="margin: 10px 0 10px 0;">\n              <a ng-click="expandAll()" class="btn btn-sm">{{ form.expandAllLabel || \'Expand all\' }}</a>\n              <a ng-click="collapseAll()" class="btn btn-sm">{{ form.collapseAllLabel || \'Collapse all\' }}</a>\n              <a ng-if="!form.readonly" ng-click="clear()" class="btn btn-sm">{{ form.clearLabel || \'Clear\' }}</a>\n              <a ng-if="form.readonly && form.downloadLabel !== false && ngModel.$modelValue" ng-click="downloadSelections()" class="btn btn-sm">{{ form.downloadLabel || \'Download\' }}</a>\n            </div>\n            <sf-obiba-selection-tree-node\n              ng-repeat="node in form.schema.nodes | treeFilter:text"\n              node="node"\n              selections="selections"\n              text-filter="text"\n              single="isSingle"\n              on-toggle-children-selections="onSelectionUpdate(selections)"\n              on-toggle-description="toggleNodeDescription(node)"\n              readonly="form.readonly"\n              class="st-tree">\n            </sf-obiba-selection-tree-node>\n          </div>\n      \n          <div ng-show="nodeDescriptionShown" ng-class="form.descriptionPanelClass ? form.descriptionPanelClass : \'col-6 col-xs-6\'">\n            <div class="st-description">\n              <div class="st-description-head help-block">\n                <span>{{ nodeDescriptionShown }}</span>\n              </div>\n              <div ng-bind-html="renderedDescription" class="st-description-body"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  <span class="help-block" sf-message="form.helpvalue || form.description"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,n,o,t){function l(n,o,l){if(("array"===o.type||"string"===o.type)&&"obibaSelectionTree"===o.format){var i=e.stdFormObj(n,o,l);return i.key=l.path,i.type="obibaSelectionTree","array"===o.type&&(i.multiple="multiple"),l.lookup[t.stringify(l.path)]=i,i}}e.defaults.array.unshift(l),e.defaults.string.unshift(l),n.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",o.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",single:"<",parentNode:"<",textFilter:"<",onToggleChildrenSelections:"&",onToggleDescription:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:["$scope",function(e){function n(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(a.currentNode=e.node.currentValue,a.currentNodePath=a.node.path,a.currentNodeTitle=a.node.title||a.node.path,a.isLeaf=a.node&&"d"!==a.node.type&&(!Array.isArray(a.node.nodes)||0===a.node.nodes.length),a.hasDescription=a.node&&a.node.description)}function o(){a.isOpen=!a.isOpen}function t(e){if(!a.isLeaf&&Array.isArray(a.currentNode.nodes)){var n=a.currentNode.nodes.filter(function(n){return e[n.path]}).length;e[a.currentNode.path]=n===a.currentNode.nodes.length}a.onToggleChildrenSelections({selections:e})}function l(e){a.onToggleDescription({node:e})}function i(e){var n=(a.textFilter||"").trim().toLowerCase();if(0===n.length)return!0;var o=((e.path||"")+(e.title||"")).toLowerCase(),t=o.indexOf(n)>-1,l=Array.isArray(e.nodes)&&e.nodes.filter(function(e){return i(e)}).length>0;return t||l}function s(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.filter(i).forEach(function(e){a.selections[e.path]=a.selections[a.currentNodePath],s(e)});else if(a.isLeaf||a.currentNode.nodes.filter(i).forEach(function(e){a.selections[e.path]=a.selections[a.currentNodePath],s(e)}),a.single){const n=Object.keys(a.selections);n.forEach(function(e){e!==a.currentNodePath&&delete a.selections[e]}),a.onToggleChildrenSelections({selections:a.selections})}else a.toggleChildrenSelections(a.selections)}function r(e){return a.nodeDescribed&&a.nodeDescribed.path===e.path}const a=this;e.$on("st-expand-all",function(){a.isOpen=!0}),e.$on("st-collapse-all",function(){a.isOpen=!1}),e.$on("st-active-node",function(e,n){a.nodeDescribed=n}),a.$onChanges=n,a.toggleNode=o,a.toggleChildrenSelections=t,a.isNodeDescribed=r,a.toggleDescription=l,a.toggleNodeSelection=s}]}).controller("sfObibaSelectionTreeController",["$scope","marked",function(e,n){function o(){function n(o){if(o)for(var l=0;l<o.length;l++){var i=o[l];if(n(i.nodes),t.includes(i.path))e.selections[i.path]=!0;else if(i.nodes){var s=i.nodes.map(function(e){return t.includes(e.path)}).includes(!1);s||(e.selections[i.path]=!0,t.push(i.path))}}}var o=e.ngModel.$modelValue,t=Array.isArray(o)?o:"string"==typeof o?[o]:[];t=t.map(function(e){return e}),n(e.form.schema.nodes)}function t(e,n){var o=void 0;if(e)for(var l=0;l<e.length;l++){var i=e[l];if(o=i.path===n?i:t(i.nodes,n))break}return o}function l(n){if(n)return i(e.form.schema.nodes,n)}function i(e,n,o){var t=void 0;if(e)for(var l=0;l<e.length;l++){var s=e[l];if(t=s.path===n?s.title:i(s.nodes,n,s.title)){t=o?o+" > "+t:t;break}}return t}function s(e){return e&&!("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)}function r(e){var n=[];if(e)for(var o=0;o<e.length;o++){var t=e[o];s(t)?n.push(t):r(t.nodes).forEach(function(e){n.push(e)})}return n}function a(){var n=Object.keys(e.selections);if(n&&n.length>0){var o=n.filter(function(n){return e.selections[n]}).sort();o=o.filter(function(n){var o=t(e.form.schema.nodes,n);return s(o)});var l;l="string"===e.form.schema.type?0===o.length?void 0:o.pop():o,e.ngModel.$setViewValue(l)}else e.ngModel.$setViewValue(void 0)}function c(n){e.nodeDescribed&&e.nodeDescribed.path===n.path?(e.nodeDescribed=void 0,e.nodeDescriptionShown=void 0,e.renderedDescription=""):(e.nodeDescribed=n,e.nodeDescriptionShown=l(n.path),d(n.description)),e.$broadcast("st-active-node",e.nodeDescribed)}function d(o){var t="",l=function(e){t.trim().length>0&&(t+="\n"),t+=e&&e.trim().length>0?e+"\n":""};Array.isArray(o)?o.forEach(l):l(o),e.renderedDescription=n(t)}function f(){if(e.showTree=!e.showTree,e.showTree){var n=e.ngModel.$modelValue;e.originalValues=angular.copy(n)}}function p(){f()}function u(){f(),e.ngModel.$setViewValue(e.originalValues),e.selections={},e.ngModel.$modelValue=e.originalValues,o()}function g(){var n=[];if(e.form.downloadAll===!0?n.push(["selected","path","label","title"].join(",")):n.push(["path","label","title"].join(",")),e.ngModel.$modelValue)if(Array.isArray(e.ngModel.$modelValue))e.form.downloadAll===!0?r(e.form.schema.nodes).forEach(function(o){var t=e.ngModel.$modelValue.includes(o.path);n.push([t?"x":"",'"'+o.path+'"','"'+l(o.path)+'"','"'+o.title+'"'].join(","))}):e.ngModel.$modelValue.forEach(function(o){var i=t(e.form.schema.nodes,o);i&&n.push(['"'+i.path+'"','"'+l(o)+'"','"'+i.title+'"'].join(","))});else if("string"==typeof e.ngModel.$modelValue){var o=e.ngModel.$modelValue;if(e.form.downloadAll===!0)r(e.form.schema.nodes).forEach(function(o){var t=e.ngModel.$modelValue===o.path;n.push([t?"x":"",'"'+o.path+'"','"'+l(o.path)+'"','"'+o.title+'"'].join(","))});else{var i=t(e.form.schema.nodes,o);i&&n.push(['"'+i.path+'"','"'+l(o)+'"','"'+i.title+'"'].join(","))}}const s=new Blob([n.join("\n")],{type:"text/csv"}),a=window.URL.createObjectURL(s),c=document.createElement("a");c.setAttribute("href",a),c.setAttribute("download",e.form.key.filter(function(e){return""!==e}).join("-")+".csv"),c.click()}function h(){e.$broadcast("st-expand-all")}function m(){e.$broadcast("st-collapse-all")}function b(){e.selections={},a()}function v(){var n=e.form.selectionsCountLabel||"{0} selected items";return n.replace("{0}",e.ngModel.$modelValue.length)}function y(){var n=e.nodeDescriptionShown?e.form.nodeDescribedNodesPanelClass?e.form.nodeDescribedNodesPanelClass:"col-6 col-xs-6":"col-12 col-xs-12";return n}e.nodeDescriptionShown=void 0,e.nodesPanelClass=y,e.renderedDescription="",e.selections={},e.originalValues={},e.onSelectionUpdate=a,e.toggleNodeDescription=c,e.showTree=!1,e.toggleShowTree=f,e.saveAndClose=p,e.cancelAndClose=u,e.downloadSelections=g,e.toLabel=l,e.expandAll=h,e.collapseAll=m,e.clear=b,e.initialized=!1,e.noSelectionLabel="No selection",e.selectionsCountLabel=v,e.noFilter=!1,e.$watch("form",function(){e.noFilter=e.form.noFilter||e.form.schema.noFilter,e.isSingle="string"===e.form.schema.type,e.isPopup=e.isSingle||e.form.popup===!0,e.showTree=!e.isPopup,e.noSelectionLabel=e.form.noSelectionLabel||"No selection"}),e.$watch("ngModel.$modelValue",function(){o()})}]).filter("treeFilter",function(){function e(n,o){var t=((n.path||"")+(n.title||"")).toLowerCase(),l=t.indexOf(o)>-1,i=Array.isArray(n.nodes)&&n.nodes.filter(function(n){return e(n,o)}).length>0;return l||i}return function(n,o){var t=(o||"").trim().toLowerCase();return 0===t.length?n:(n||[]).filter(function(n){return e(n,t)})}}).directive("indeterminate",[function(){return{require:"?ngModel",link:function(e,n,o,t){var l=function(n){if(!n.nodes)return!1;var o=e.$ctrl.selections,t=n.nodes.filter(function(e){return o[e.path]}).length,i=n.nodes.length;if(0===t&&i>0){var s=n.nodes.map(function(e){return l(e)}).filter(function(e){return e}).pop();return s===!0}return t>0&&t<i};t.$formatters=[],t.$parsers=[],t.$render=function(){var o=t.$viewValue;n.data("checked",o),o?(n.prop("indeterminate",!1),n.prop("checked",!0)):(n.prop("indeterminate",l(e.$ctrl.currentNode)),n.prop("checked",!1))},n.bind("click",function(){var o=!n.data("checked");t.$setViewValue(o),e.$apply(t.$render)})}}}]);