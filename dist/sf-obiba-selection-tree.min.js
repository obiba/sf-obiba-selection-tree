angular.module("sfObibaSelectionTreeTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-selection-tree-node.html",'<div class="st-node">\n  <button ng-click="$ctrl.toggleNode()" class="btn btn-sm btn-link" type="button">\n    <i class="glyphicon" ng-show="!$ctrl.isLeaf" ng-class="{\'glyphicon-menu-right\': !$ctrl.isOpen, \'glyphicon-menu-down\': $ctrl.isOpen}"></i>\n    <div ng-show="$ctrl.isLeaf" style="width: 1em;"></div>\n  </button>\n\n  <input ng-show="!$ctrl.readonly" type="checkbox" name="{{$ctrl.currentNodePath}}" indeterminate ng-model="$ctrl.selections[$ctrl.currentNodePath]" ng-change="$ctrl.toggleNodeSelection()">\n\n  <span style="margin-left: 1em;">\n    <i class="glyphicon" ng-class="{\'glyphicon-folder-open\': !$ctrl.isLeaf, \'glyphicon-file\': $ctrl.isLeaf}" style="margin-right: 0.5em;"></i>\n    <span ng-show="!$ctrl.hasDescription">{{$ctrl.currentNodeTitle}}</span>\n    <button ng-show="$ctrl.hasDescription" ng-click="$ctrl.toggleDescription($ctrl.currentNode)" class="btn btn-link" type="button">{{$ctrl.currentNodeTitle}}</button>\n  </span>\n\n  <div ng-show="!$ctrl.isLeaf && $ctrl.isOpen" class="row" style="margin-left: 1.25em;">\n    <sf-obiba-selection-tree-node\n      ng-repeat="node in $ctrl.currentNode.nodes | treeFilter:$ctrl.textFilter"\n      node="node"\n      selections="$ctrl.selections"\n      text-filter="$ctrl.textFilter"\n      parent-node="$ctrl.currentNode"\n      on-toggle-children-selections="$ctrl.toggleChildrenSelections(selections)"\n      on-toggle-description="$ctrl.toggleDescription(node)"\n      readonly="$ctrl.readonly">\n    </sf-obiba-selection-tree-node>\n  </div>\n</div>'),e.put("src/templates/sf-obiba-selection-tree.html",'<div\n  class="form-group st-form-group"\n  ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"\n  ng-controller="sfObibaSelectionTreeController"\n  schema-validate="form"\n  sf-field-model>\n  <label ng-if="!form.notitle" class="control-label" >{{form.title}}</label>\n\n  <div class="row">\n    <div ng-class="{\'col-xs-12\': !nodeDescriptionShown, \'col-xs-5\': nodeDescriptionShown}" class="st-tree">\n      <div class="input-group" ng-hide="form.schema.noFilter" style="max-width: 200px">\n        <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>\n        <input type="text" class="form-control" ng-model="text">\n      </div>\n      <sf-obiba-selection-tree-node\n        ng-repeat="node in form.schema.nodes | treeFilter:text"\n        node="node"\n        selections="selections"\n        text-filter="text"\n        on-toggle-children-selections="onSelectionUpdate(selections)"\n        on-toggle-description="toggleNodeDescription(node)"\n        readonly="form.readonly">\n      </sf-obiba-selection-tree-node>\n    </div>\n\n    <div ng-show="nodeDescriptionShown" class="col-xs-7 st-description">\n      <div ng-bind-html="renderedDescription"></div>\n    </div>    \n  </div>\n  <span class="help-block" sf-message="form.helpvalue"></span>\n</div>')}]),angular.module("sfObibaSelectionTree",["schemaForm","sfObibaSelectionTreeTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,n,t,o){function r(n,t,r){if("array"===t.type&&"obibaSelectionTree"===t.format){var i=e.stdFormObj(n,t,r);return i.key=r.path,i.type="obibaSelectionTree",i.multiple="multiple",r.lookup[o.stringify(r.path)]=i,i}}e.defaults.array.unshift(r),n.defineAddOn("bootstrapDecorator","obibaSelectionTree","src/templates/sf-obiba-selection-tree.html",t.stdBuilders)}]).component("sfObibaSelectionTreeNode",{bindings:{node:"<",selections:"<",readonly:"<",parentNode:"<",textFilter:"<",onToggleChildrenSelections:"&",onToggleDescription:"&"},templateUrl:"src/templates/sf-obiba-selection-tree-node.html",controller:function(){function e(e){e.node&&e.node.currentValue&&e.node.currentValue.path&&(i.currentNode=e.node.currentValue,i.currentNodePath=i.node.path,i.currentNodeTitle=i.node.title||i.node.path,i.isLeaf=i.node&&"d"!==i.node.type&&(!Array.isArray(i.node.nodes)||0===i.node.nodes.length),i.hasDescription=i.node&&i.node.description)}function n(){i.isOpen=!i.isOpen}function t(e){i.onToggleChildrenSelections({selections:e})}function o(e){i.onToggleDescription({node:e})}function r(e){if(e)("d"===e.type||Array.isArray(e.nodes)&&e.nodes.length>0)&&e.nodes.forEach(function(e){i.selections[e.path]=i.selections[i.currentNodePath]});else{if(i.isLeaf||i.currentNode.nodes.forEach(function(e){i.selections[e.path]=i.selections[i.currentNodePath],r(e)}),i.parentNode&&Array.isArray(i.parentNode.nodes)){var n=i.parentNode.nodes.filter(function(e){return i.selections[e.path]}).length;i.selections[i.parentNode.path]=n===i.parentNode.nodes.length}i.toggleChildrenSelections(i.selections)}}const i=this;i.$onChanges=e,i.toggleNode=n,i.toggleChildrenSelections=t,i.toggleDescription=o,i.toggleNodeSelection=r}}).controller("sfObibaSelectionTreeController",["$scope","marked",function(e,n){function t(){var n=[];e.form.key.forEach(function(t){n=e.model[t]}),Array.isArray(n)&&n.map(function(n){e.selections[n]=!0})}function o(n){var t=e.form.key.reduce(function(n,t){return n=n?n:e.model,n[t]});t=n}function r(){var n=Object.keys(e.selections);if(n&&n.length>0){o([]);var t=n.filter(function(n){return e.selections[n]});e.ngModel.$setViewValue(t),o(t)}}function i(n){e.nodeDescriptionShown&&e.nodeDescriptionShown===n.path?(e.nodeDescriptionShown=void 0,e.renderedDescription=""):(e.nodeDescriptionShown=n.path,s(n.description))}function s(t){var o="",r=function(e){o.trim().length>0&&(o+="\n"),o+=e&&e.trim().length>0?e+"\n":""};Array.isArray(t)?t.forEach(r):r(t),e.renderedDescription=n(o)}e.nodeDescriptionShown=void 0,e.renderedDescription="",e.selections={},e.onSelectionUpdate=r,e.toggleNodeDescription=i,e.$watch("form",function(){t()})}]).filter("treeFilter",function(){function e(n,t){var o=((n.path||"")+(n.title||"")).toLowerCase(),r=o.indexOf(t)>-1,i=Array.isArray(n.nodes)&&n.nodes.filter(function(n){return e(n,t)}).length>0;return r||i}return function(n,t){var o=(t||"").trim().toLowerCase();return 0===o.length?n:(n||[]).filter(function(n){return e(n,o)})}}).directive("indeterminate",[function(){return{require:"?ngModel",link:function(e,n,t,o){var r=function(n){if(!n.nodes)return!1;var t=e.$ctrl.selections,o=n.nodes.filter(function(e){return t[e.path]}).length,i=n.nodes.length;if(0===o&&i>0){var s=n.nodes.map(function(e){return r(e)}).filter(function(e){return e}).pop();return s===!0}return o>0&&o<i};o.$formatters=[],o.$parsers=[],o.$render=function(){var t=o.$viewValue;n.data("checked",t),t?(n.prop("indeterminate",!1),n.prop("checked",!0)):(n.prop("indeterminate",r(e.$ctrl.currentNode)),n.prop("checked",!1))},n.bind("click",function(){var t=!n.data("checked");o.$setViewValue(t),e.$apply(o.$render)})}}}]);